'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var initConfig = require('../../../dist/initConfig-157d3d00.cjs.prod.js');
var createApolloServer = require('../../../dist/createApolloServer-1b8db11a.cjs.prod.js');
require('@babel/runtime/helpers/objectSpread2');
require('../../../dist/core-fe91e1fc.cjs.prod.js');
require('../../../dist/sqlite-376d1367.cjs.prod.js');
require('../../../dist/graphql-ts-schema-81d4ca0a.cjs.prod.js');
require('@graphql-ts/schema');
require('graphql-type-json');
require('graphql-upload/public/GraphQLUpload.js');
require('graphql');
require('decimal.js');
require('@graphql-ts/schema/api-without-context');
require('@graphql-ts/schema/api-with-context');
require('@graphql-tools/schema');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../../dist/graphql-errors-2ce72a8b.cjs.prod.js');
require('apollo-server-errors');
require('path');
require('fs-extra');
require('fast-glob');
require('prettier');
require('resolve');
require('@emotion/hash');
require('../../../dist/admin-meta-graphql-c4e50813.cjs.prod.js');
require('@apollo/client');
require('../../../session/dist/keystone.cjs.prod.js');
require('cookie');
require('@hapi/iron');
require('uid-safe');
require('@babel/runtime/helpers/classPrivateFieldInitSpec');
require('@babel/runtime/helpers/classPrivateFieldGet');
require('@babel/runtime/helpers/classPrivateFieldSet');
require('p-limit');
require('../../../dist/types-for-lists-5a8b5796.cjs.prod.js');
require('graphql/execution/values');
require('pluralize');
require('uuid');
require('image-type');
require('image-size');
require('../../../fields/types/image/utils/dist/keystone.cjs.prod.js');
require('node-fetch');
require('form-data');
require('crypto');
require('stream');
require('filenamify');
require('@sindresorhus/slugify');
require('../../../fields/types/file/utils/dist/keystone.cjs.prod.js');
require('cuid');
require('../../../dist/package-path-6740a0e1.cjs.prod.js');
require('apollo-server-micro');
require('apollo-server-express');

function nextGraphQLAPIRoute(keystoneConfig, prismaClient) {
  var _keystoneConfig$graph;

  const initializedKeystoneConfig = initConfig.initConfig(keystoneConfig);
  const {
    graphQLSchema,
    getKeystone
  } = initConfig.createSystem(initializedKeystoneConfig);
  const keystone = getKeystone(prismaClient);
  keystone.connect();
  const apolloServer = createApolloServer.createApolloServerMicro({
    graphQLSchema,
    createContext: keystone.createContext,
    sessionStrategy: initializedKeystoneConfig.session,
    graphqlConfig: initializedKeystoneConfig.graphql,
    connectionPromise: keystone.connect()
  });
  return apolloServer.createHandler({
    path: ((_keystoneConfig$graph = keystoneConfig.graphql) === null || _keystoneConfig$graph === void 0 ? void 0 : _keystoneConfig$graph.path) || '/api/graphql'
  });
}

exports.nextGraphQLAPIRoute = nextGraphQLAPIRoute;
